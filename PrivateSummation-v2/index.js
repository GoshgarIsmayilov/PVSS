window.addEventListener('load', async () => {
    provider = new ethers.providers.Web3Provider(web3.currentProvider);

    await provider.send("eth_requestAccounts", []);

    $("#send-token-loader").hide();
    $("#receive-token-loader").hide();
});

var abi = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"_registrationStartTime","type":"uint256"},{"internalType":"uint256","name":"_registrationTimeLimit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"calculateMaximumHypercubeStage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAddressesOfHypercubePairs","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHypercubePairConfigurationA","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHypercubePairConfigurationB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMyCommitment","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPublicKeysOfHypercubePairs","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSecretSumComponentsFromPair","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"commitmentA","type":"uint256"},{"internalType":"uint256","name":"commitmentB","type":"uint256"},{"internalType":"string","name":"publicKey","type":"string"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"secretMessageA","type":"string"},{"internalType":"string","name":"secretMessageB","type":"string"}],"name":"submitSecretSumToPair","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"aA","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"bA","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"cA","type":"uint256[2]"},{"internalType":"uint256[2]","name":"aB","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"bB","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"cB","type":"uint256[2]"},{"internalType":"uint256","name":"newSumCommitmentA","type":"uint256"},{"internalType":"uint256","name":"newSumCommitmentB","type":"uint256"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]');

var bytecode = "608060405260006009556000600a556000600b556000600c556000600d553480156200002a57600080fd5b5060405162003cd838038062003cd883398181016040528101906200005091906200007d565b81600b8190555080600c819055505050620000ed565b6000815190506200007781620000d3565b92915050565b60008060408385031215620000975762000096620000ce565b5b6000620000a78582860162000066565b9250506020620000ba8582860162000066565b9150509250929050565b6000819050919050565b600080fd5b620000de81620000c4565b8114620000ea57600080fd5b50565b613bdb80620000fd6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638cf7c130116100665780638cf7c130146101385780639963ee2d14610142578063c04068b214610173578063caa9e62714610192578063cfe0bf8b146101b15761009e565b806354979de9146100a35780635b93a3d6146100bf57806361420e8c146100dd57806387928fc1146100f95780638915b96f14610117575b600080fd5b6100bd60048036038101906100b89190611621565b6101d5565b005b6100c7610352565b6040516100d49190611ab2565b60405180910390f35b6100f760048036038101906100f29190611699565b6103a8565b005b6101016105ca565b60405161010e9190611ab2565b60405180910390f35b61011f610639565b60405161012f9493929190611a1f565b60405180910390f35b610140610874565b005b61015c60048036038101906101579190611539565b6108b2565b60405161016a9291906119bf565b60405180910390f35b61017b610f4b565b60405161018992919061194f565b60405180910390f35b61019a610fee565b6040516101a89291906119e8565b60405180910390f35b6101b96111a0565b6040516101cc9796959493929190611acd565b60405180910390f35b600954600a541061021b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021290611a72565b60405180910390fd5b600080610226610f4b565b9150915083600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102ba9291906112cb565b5082600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061034b9291906112cb565b5050505050565b6000600a5460026103639190611d35565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205418905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546103f490611f11565b905014610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90611a92565b60405180910390fd5b6008805490506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906105599291906112cb565b506008339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105c5610874565b505050565b60006001600a546009546105de9190611e53565b6105e89190611e53565b60026105f49190611d35565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205418905090565b60608060008060008061064a610f4b565b91509150600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600954600a5483805461075890611f11565b80601f016020809104026020016040519081016040528092919081815260200182805461078490611f11565b80156107d15780601f106107a6576101008083540402835291602001916107d1565b820191906000526020600020905b8154815290600101906020018083116107b457829003601f168201915b505050505093508280546107e490611f11565b80601f016020809104026020016040519081016040528092919081815260200182805461081090611f11565b801561085d5780601f106108325761010080835404028352916020019161085d565b820191906000526020600020905b81548152906001019060200180831161084057829003601f168201915b505050505092509550955095509550505090919293565b600060095460026108859190611d35565b90508060088054905011156108af576001600960008282546108a79190611c8c565b925050819055505b50565b600080600954600a54106108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f290611a72565b60405180910390fd5b600080610906610f4b565b91509150600060405161091890611351565b604051809103906000f080158015610934573d6000803e3d6000fd5b50905060008173ffffffffffffffffffffffffffffffffffffffff1663aa2415228f8f8f6040518060800160405280600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018e815260200160018152506040518563ffffffff1660e01b8152600401610a179493929190611978565b60206040518083038186803b158015610a2f57600080fd5b505afa158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6791906115f4565b905060008273ffffffffffffffffffffffffffffffffffffffff1663aa2415228d8d8d6040518060800160405280600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018e815260200160018152506040518563ffffffff1660e01b8152600401610b499493929190611978565b60206040518083038186803b158015610b6157600080fd5b505afa158015610b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9991906115f4565b9050818015610ba55750805b15610f33576001600d6000828254610bbd9190611c8c565b92505081905550600880549050600d541415610bf6576001600a6000828254610be69190611c8c565b925050819055506000600d819055505b6000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610c875788600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d94565b88600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610e255787600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f32565b87600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b81819650965050505050509850989650505050505050565b6000806000610f58610352565b90506000610f646105ca565b905060088281548110610f7a57610f79611fd2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660088281548110610fb957610fb8611fd2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350935050509091565b606080600080610ffc610f4b565b91509150600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081805461108a90611f11565b80601f01602080910402602001604051908101604052809291908181526020018280546110b690611f11565b80156111035780601f106110d857610100808354040283529160200191611103565b820191906000526020600020905b8154815290600101906020018083116110e657829003601f168201915b5050505050915080805461111690611f11565b80601f016020809104026020016040519081016040528092919081815260200182805461114290611f11565b801561118f5780601f106111645761010080835404028352916020019161118f565b820191906000526020600020905b81548152906001019060200180831161117257829003601f168201915b505050505090509350935050509091565b6000806000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a54600954600d54965096509650965096509650965090919293949596565b8280546112d790611f11565b90600052602060002090601f0160209004810192826112f95760008555611340565b82601f1061131257805160ff1916838001178555611340565b82800160010185558215611340579182015b8281111561133f578251825591602001919060010190611324565b5b50905061134d919061135e565b5090565b611a988061210e83390190565b5b8082111561137757600081600090555060010161135f565b5090565b600061138e61138984611b61565b611b3c565b905080828560408602820111156113a8576113a7612035565b5b60005b858110156113d857816113be88826114b6565b8452602084019350604083019250506001810190506113ab565b5050509392505050565b60006113f56113f084611b87565b611b3c565b9050808285602086028201111561140f5761140e612035565b5b60005b8581101561143f57816114258882611524565b845260208401935060208301925050600181019050611412565b5050509392505050565b600061145c61145784611bad565b611b3c565b9050828152602081018484840111156114785761147761203a565b5b611483848285611ecf565b509392505050565b600082601f8301126114a05761149f612030565b5b60026114ad84828561137b565b91505092915050565b600082601f8301126114cb576114ca612030565b5b60026114d88482856113e2565b91505092915050565b6000815190506114f0816120df565b92915050565b600082601f83011261150b5761150a612030565b5b813561151b848260208601611449565b91505092915050565b600081359050611533816120f6565b92915050565b600080600080600080600080610240898b03121561155a57611559612044565b5b60006115688b828c016114b6565b98505060406115798b828c0161148b565b97505060c061158a8b828c016114b6565b96505061010061159c8b828c016114b6565b9550506101406115ae8b828c0161148b565b9450506101c06115c08b828c016114b6565b9350506102006115d28b828c01611524565b9250506102206115e48b828c01611524565b9150509295985092959890939650565b60006020828403121561160a57611609612044565b5b6000611618848285016114e1565b91505092915050565b6000806040838503121561163857611637612044565b5b600083013567ffffffffffffffff8111156116565761165561203f565b5b611662858286016114f6565b925050602083013567ffffffffffffffff8111156116835761168261203f565b5b61168f858286016114f6565b9150509250929050565b6000806000606084860312156116b2576116b1612044565b5b60006116c086828701611524565b93505060206116d186828701611524565b925050604084013567ffffffffffffffff8111156116f2576116f161203f565b5b6116fe868287016114f6565b9150509250925092565b6000611714838361179e565b60408301905092915050565b600061172c8383611931565b60208301905092915050565b61174181611e87565b82525050565b61175081611bfc565b61175a8184611c4f565b925061176582611bde565b8060005b8381101561179657815161177d8782611708565b965061178883611c28565b925050600181019050611769565b505050505050565b6117a781611c07565b6117b18184611c5a565b92506117bc82611be8565b8060005b838110156117ed5781516117d48782611720565b96506117df83611c35565b9250506001810190506117c0565b505050505050565b6117fe81611c07565b6118088184611c65565b925061181382611be8565b8060005b8381101561184457815161182b8782611720565b965061183683611c35565b925050600181019050611817565b505050505050565b61185581611c12565b61185f8184611c70565b925061186a82611bf2565b8060005b8381101561189b5781516118828782611720565b965061188d83611c42565b92505060018101905061186e565b505050505050565b6118ac81611e99565b82525050565b60006118bd82611c1d565b6118c78185611c7b565b93506118d7818560208601611ede565b6118e081612049565b840191505092915050565b60006118f8602583611c7b565b915061190382612067565b604082019050919050565b600061191b601c83611c7b565b9150611926826120b6565b602082019050919050565b61193a81611ec5565b82525050565b61194981611ec5565b82525050565b60006040820190506119646000830185611738565b6119716020830184611738565b9392505050565b60006101808201905061198e60008301876117f5565b61199b6040830186611747565b6119a860c08301856117f5565b6119b661010083018461184c565b95945050505050565b60006040820190506119d460008301856118a3565b6119e160208301846118a3565b9392505050565b60006040820190508181036000830152611a0281856118b2565b90508181036020830152611a1681846118b2565b90509392505050565b60006080820190508181036000830152611a3981876118b2565b90508181036020830152611a4d81866118b2565b9050611a5c6040830185611940565b611a696060830184611940565b95945050505050565b60006020820190508181036000830152611a8b816118eb565b9050919050565b60006020820190508181036000830152611aab8161190e565b9050919050565b6000602082019050611ac76000830184611940565b92915050565b600060e082019050611ae2600083018a611940565b611aef6020830189611940565b611afc6040830188611940565b611b096060830187611940565b611b166080830186611940565b611b2360a0830185611940565b611b3060c0830184611940565b98975050505050505050565b6000611b46611b57565b9050611b528282611f43565b919050565b6000604051905090565b600067ffffffffffffffff821115611b7c57611b7b612001565b5b602082029050919050565b600067ffffffffffffffff821115611ba257611ba1612001565b5b602082029050919050565b600067ffffffffffffffff821115611bc857611bc7612001565b5b611bd182612049565b9050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060049050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b6000611c9782611ec5565b9150611ca283611ec5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cd757611cd6611f74565b5b828201905092915050565b6000808291508390505b6001851115611d2c57808604811115611d0857611d07611f74565b5b6001851615611d175780820291505b8081029050611d258561205a565b9450611cec565b94509492505050565b6000611d4082611ec5565b9150611d4b83611ec5565b9250611d787fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611d80565b905092915050565b600082611d905760019050611e4c565b81611d9e5760009050611e4c565b8160018114611db45760028114611dbe57611ded565b6001915050611e4c565b60ff841115611dd057611dcf611f74565b5b8360020a915084821115611de757611de6611f74565b5b50611e4c565b5060208310610133831016604e8410600b8410161715611e225782820a905083811115611e1d57611e1c611f74565b5b611e4c565b611e2f8484846001611ce2565b92509050818404811115611e4657611e45611f74565b5b81810290505b9392505050565b6000611e5e82611ec5565b9150611e6983611ec5565b925082821015611e7c57611e7b611f74565b5b828203905092915050565b6000611e9282611ea5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611efc578082015181840152602081019050611ee1565b83811115611f0b576000848401525b50505050565b60006002820490506001821680611f2957607f821691505b60208210811415611f3d57611f3c611fa3565b5b50919050565b611f4c82612049565b810181811067ffffffffffffffff82111715611f6b57611f6a612001565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f6e6c7920616c6c6f77656420647572696e672068797065726375626520706560008201527f72696f6421000000000000000000000000000000000000000000000000000000602082015250565b7f557365722068617320616c726561647920726567697374657265642100000000600082015250565b6120e881611e99565b81146120f357600080fd5b50565b6120ff81611ec5565b811461210a57600080fd5b5056fe608060405234801561001057600080fd5b50611a78806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063799afa761461003b578063aa2415221461006b575b600080fd5b610055600480360381019061005091906116a2565b61009b565b60405161006291906116f3565b60405180910390f35b61008560048036038101906100809190611639565b610169565b60405161009291906116f3565b60405180910390f35b600080600467ffffffffffffffff8111156100b9576100b86119d7565b5b6040519080825280602002602001820160405280156100e75781602001602082028036833780820191505090505b50905060005b600481101561014057838160048110610109576101086119a8565b5b6020020151828281518110610121576101206119a8565b5b6020026020010181815250508080610138906118d0565b9150506100ed565b50600061014d82866103e3565b141561015d576001915050610163565b60009150505b92915050565b6000610173611227565b604051806040016040528087600060028110610192576101916119a8565b5b60200201518152602001876001600281106101b0576101af6119a8565b5b6020020151815250816000018190525060405180604001604052806040518060400160405280886000600281106101ea576101e96119a8565b5b6020020151600060028110610202576102016119a8565b5b60200201518152602001886000600281106102205761021f6119a8565b5b6020020151600160028110610238576102376119a8565b5b60200201518152508152602001604051806040016040528088600160028110610264576102636119a8565b5b602002015160006002811061027c5761027b6119a8565b5b602002015181526020018860016002811061029a576102996119a8565b5b60200201516001600281106102b2576102b16119a8565b5b602002015181525081525081602001819052506040518060400160405280856000600281106102e4576102e36119a8565b5b6020020151815260200185600160028110610302576103016119a8565b5b602002015181525081604001819052506000600467ffffffffffffffff81111561032f5761032e6119d7565b5b60405190808252806020026020018201604052801561035d5781602001602082028036833780820191505090505b50905060005b60048110156103b65784816004811061037f5761037e6119a8565b5b6020020151828281518110610397576103966119a8565b5b60200260200101818152505080806103ae906118d0565b915050610363565b5060006103c382846103e3565b14156103d4576001925050506103db565b6000925050505b949350505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050600061041361057a565b90508060800151516001865161042991906117a5565b1461043357600080fd5b60006040518060400160405280600081526020016000815250905060005b86518110156104ec578387828151811061046e5761046d6119a8565b5b60200260200101511061048057600080fd5b6104d7826104d2856080015160018561049991906117a5565b815181106104aa576104a96119a8565b5b60200260200101518a85815181106104c5576104c46119a8565b5b6020026020010151610ae6565b610b8d565b915080806104e4906118d0565b915050610451565b50610516818360800151600081518110610509576105086119a8565b5b6020026020010151610b8d565b905061055c8560000151866020015161052e84610c5a565b85604001516105408a60400151610c5a565b87606001516105528960000151610c5a565b8960200151610cff565b61056c5760019350505050610574565b600093505050505b92915050565b61058261125a565b60405180604001604052807f075283a39b751736524127064cb7e3e97f0b793e9d2c77622c735290dd4f114381526020017f037bc91f58c2cf5885d6003dab5b4c5893358e10c2adb9e4dc3d91984769640b8152508160000181905250604051806040016040528060405180604001604052807f236e14c78c52483c5ddf4102bdec26cd995ccae9f26e24cbbbf9c1d646c35f5e81526020017f136629cff10743d59d656abe093b2f4fcacb3bedd79ae523e68df9e3620c6358815250815260200160405180604001604052807f2f17e7f2e102002ba714e9f24f02b0ed7603fb260355322f5d611ba770b22e7d81526020017f2679c40107948f17e2bb370a580ce29cea64121840db276568af0c405030b9608152508152508160200181905250604051806040016040528060405180604001604052807f1a1998366d538c4252e4a005b63b13954dea35c39f3a65e4a8d479216764e0bd81526020017f051faed11e1614956a4d1109e836bcedc35bc7317f43d6b69bafd5fe5c47baee815250815260200160405180604001604052807f1a943f9993622a0783a1be5b452d04ba0971641067d39c4e958a59581f92727081526020017f03073b84b810092f9287e89f9b10fe20415226a16d50185af16f3ba6f25e91e68152508152508160400181905250604051806040016040528060405180604001604052807f139119cf2583ac35225315b8cb540e8054f56bda98891f5d07f1a2ea5a0ae9bb81526020017f2636c4157fa712f0f0420545759caa323184f38c9b7be794b62a53a8932304cf815250815260200160405180604001604052807f1e3e8528341c3236be0896599b65ce9a9188327f726f5193ce2924ff3c6917d381526020017f27c7ec8241daa2e58f88169eda23d77c119599f91eaa77fc93ce0c42664adb7e8152508152508160600181905250600567ffffffffffffffff811115610849576108486119d7565b5b60405190808252806020026020018201604052801561088257816020015b61086f6112a1565b8152602001906001900390816108675790505b50816080018190525060405180604001604052807f08d5e198ca247dcde54ef77ac8e766036cdea4f18ff58cca3c484170364c6c0c81526020017f23415619f3c23074d8656fb94e4f2f46f7cb3f36e6adbb5f072511f3da4eb7f981525081608001516000815181106108f8576108f76119a8565b5b602002602001018190525060405180604001604052807f245e24081ffbde486fcbc9366d92f9c62fd18413a70be1ef17070513931a0f4381526020017f2aab2278b84bd5fa1e722c2d9bb087c1398500b712d8dc67896938706fa2265381525081608001516001815181106109705761096f6119a8565b5b602002602001018190525060405180604001604052807f02e4218f9e62b0c78e55ebb9b5e275ef7eeeedc29d34fa3bafdb2f339862c23581526020017f1ec21074c8ad9db7469eb18f4ce613d989f305c038759c0bd3beb2dea5cad30081525081608001516002815181106109e8576109e76119a8565b5b602002602001018190525060405180604001604052807f07a3220fa44ded408a4e21a595e0032269deb6c5ad598f1d4cdaa969196fd8d281526020017f075aa2d7bba8c0940fc349c6e1da97cb0255cbe6c87068e42afc637f124055798152508160800151600381518110610a6057610a5f6119a8565b5b602002602001018190525060405180604001604052807f226ed6eef7bf7aa8d5326aa2e97a85184eb20c1a2dd3ecb9b6197b0df576754081526020017f0b32c54590a650291ecc0f7f13065a0b89177f68c637869ef1a0bd4d03fa268c8152508160800151600481518110610ad857610ad76119a8565b5b602002602001018190525090565b610aee6112a1565b610af66112bb565b836000015181600060038110610b0f57610b0e6119a8565b5b602002018181525050836020015181600160038110610b3157610b306119a8565b5b6020020181815250508281600260038110610b4f57610b4e6119a8565b5b602002018181525050600060608360808460076107d05a03fa90508060008114610b7857610b7a565bfe5b5080610b8557600080fd5b505092915050565b610b956112a1565b610b9d6112dd565b836000015181600060048110610bb657610bb56119a8565b5b602002018181525050836020015181600160048110610bd857610bd76119a8565b5b602002018181525050826000015181600260048110610bfa57610bf96119a8565b5b602002018181525050826020015181600360048110610c1c57610c1b6119a8565b5b602002018181525050600060608360c08460066107d05a03fa90508060008114610c4557610c47565bfe5b5080610c5257600080fd5b505092915050565b610c626112a1565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610c9f575060008360200151145b15610cc3576040518060400160405280600081526020016000815250915050610cfa565b604051806040016040528084600001518152602001828560200151610ce89190611919565b83610cf39190611855565b8152509150505b919050565b600080600467ffffffffffffffff811115610d1d57610d1c6119d7565b5b604051908082528060200260200182016040528015610d5657816020015b610d436112a1565b815260200190600190039081610d3b5790505b5090506000600467ffffffffffffffff811115610d7657610d756119d7565b5b604051908082528060200260200182016040528015610daf57816020015b610d9c6112ff565b815260200190600190039081610d945790505b5090508a82600081518110610dc757610dc66119a8565b5b60200260200101819052508882600181518110610de757610de66119a8565b5b60200260200101819052508682600281518110610e0757610e066119a8565b5b60200260200101819052508482600381518110610e2757610e266119a8565b5b60200260200101819052508981600081518110610e4757610e466119a8565b5b60200260200101819052508781600181518110610e6757610e666119a8565b5b60200260200101819052508581600281518110610e8757610e866119a8565b5b60200260200101819052508381600381518110610ea757610ea66119a8565b5b6020026020010181905250610ebc8282610ecc565b9250505098975050505050505050565b60008151835114610edc57600080fd5b6000835190506000600682610ef191906117fb565b905060008167ffffffffffffffff811115610f0f57610f0e6119d7565b5b604051908082528060200260200182016040528015610f3d5781602001602082028036833780820191505090505b50905060005b838110156111c257868181518110610f5e57610f5d6119a8565b5b602002602001015160000151826000600684610f7a91906117fb565b610f8491906117a5565b81518110610f9557610f946119a8565b5b602002602001018181525050868181518110610fb457610fb36119a8565b5b602002602001015160200151826001600684610fd091906117fb565b610fda91906117a5565b81518110610feb57610fea6119a8565b5b60200260200101818152505085818151811061100a576110096119a8565b5b602002602001015160000151600160028110611029576110286119a8565b5b602002015182600260068461103e91906117fb565b61104891906117a5565b81518110611059576110586119a8565b5b602002602001018181525050858181518110611078576110776119a8565b5b602002602001015160000151600060028110611097576110966119a8565b5b60200201518260036006846110ac91906117fb565b6110b691906117a5565b815181106110c7576110c66119a8565b5b6020026020010181815250508581815181106110e6576110e56119a8565b5b602002602001015160200151600160028110611105576111046119a8565b5b602002015182600460068461111a91906117fb565b61112491906117a5565b81518110611135576111346119a8565b5b602002602001018181525050858181518110611154576111536119a8565b5b602002602001015160200151600060028110611173576111726119a8565b5b602002015182600560068461118891906117fb565b61119291906117a5565b815181106111a3576111a26119a8565b5b60200260200101818152505080806111ba906118d0565b915050610f43565b506111cb611325565b6000602082602086026020860160086107d05a03fa905080600081146111f0576111f2565bfe5b50806111fd57600080fd5b600082600060018110611213576112126119a8565b5b602002015114159550505050505092915050565b604051806060016040528061123a6112a1565b81526020016112476112ff565b81526020016112546112a1565b81525090565b6040518060a0016040528061126d6112a1565b815260200161127a6112ff565b81526020016112876112ff565b81526020016112946112ff565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060400160405280611312611347565b815260200161131f611347565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b600061137c61137784611733565b61170e565b9050808285604086028201111561139657611395611a10565b5b60005b858110156113c657816113ac88826114c9565b845260208401935060408301925050600181019050611399565b5050509392505050565b60006113e36113de84611759565b61170e565b905080828560208602820111156113fd576113fc611a10565b5b60005b8581101561142d57816114138882611624565b845260208401935060208301925050600181019050611400565b5050509392505050565b600061144a6114458461177f565b61170e565b9050808285602086028201111561146457611463611a10565b5b60005b85811015611494578161147a8882611624565b845260208401935060208301925050600181019050611467565b5050509392505050565b600082601f8301126114b3576114b2611a06565b5b60026114c0848285611369565b91505092915050565b600082601f8301126114de576114dd611a06565b5b60026114eb8482856113d0565b91505092915050565b600082601f83011261150957611508611a06565b5b6004611516848285611437565b91505092915050565b60006040828403121561153557611534611a0b565b5b61153f604061170e565b9050600061154f84828501611624565b600083015250602061156384828501611624565b60208301525092915050565b60006080828403121561158557611584611a0b565b5b61158f604061170e565b9050600061159f848285016114c9565b60008301525060406115b3848285016114c9565b60208301525092915050565b600061010082840312156115d6576115d5611a0b565b5b6115e0606061170e565b905060006115f08482850161151f565b60008301525060406116048482850161156f565b60208301525060c06116188482850161151f565b60408301525092915050565b60008135905061163381611a2b565b92915050565b600080600080610180858703121561165457611653611a15565b5b6000611662878288016114c9565b94505060406116738782880161149e565b93505060c0611684878288016114c9565b925050610100611696878288016114f4565b91505092959194509250565b60008061018083850312156116ba576116b9611a15565b5b60006116c8858286016115bf565b9250506101006116da858286016114f4565b9150509250929050565b6116ed81611889565b82525050565b600060208201905061170860008301846116e4565b92915050565b6000611718611729565b9050611724828261189f565b919050565b6000604051905090565b600067ffffffffffffffff82111561174e5761174d6119d7565b5b602082029050919050565b600067ffffffffffffffff821115611774576117736119d7565b5b602082029050919050565b600067ffffffffffffffff82111561179a576117996119d7565b5b602082029050919050565b60006117b082611895565b91506117bb83611895565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117f0576117ef61194a565b5b828201905092915050565b600061180682611895565b915061181183611895565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561184a5761184961194a565b5b828202905092915050565b600061186082611895565b915061186b83611895565b92508282101561187e5761187d61194a565b5b828203905092915050565b60008115159050919050565b6000819050919050565b6118a882611a1a565b810181811067ffffffffffffffff821117156118c7576118c66119d7565b5b80604052505050565b60006118db82611895565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561190e5761190d61194a565b5b600182019050919050565b600061192482611895565b915061192f83611895565b92508261193f5761193e611979565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611a3481611895565b8114611a3f57600080fd5b5056fea264697066735822122008a9bb059d52e842c52cd8e6ffd4cfae7de2f077a6ac584e0d170b770df6024a64736f6c63430008070033a264697066735822122062e39fc391839b3a2c65c33adf8f1f710c0e55c4ad2def570994f83b873791ff64736f6c63430008070033";
    
async function deploy_contract() {
    let registration_start_time = $("#registration-start-time").val();
    let registration_time_limit = $("#registration-time-limit").val();

    let signer = provider.getSigner(0);
    let factory = new ethers.ContractFactory(abi, bytecode, signer);
    let contract = await factory.deploy(String(registration_start_time), String(registration_time_limit));

    $("#status-deploy-contract").html('<b style="color:green;">The contract is deployed with the address: ' + contract.address + '</b>');
}

async function register() {
    let contract_address = $("#register-contract-address").val();
    let secret_value = $("#register-secret-value").val();
    
    let signer = provider.getSigner(0);
    let contract = new ethers.Contract(String(contract_address), abi, signer);

    const register_signer = provider.getSigner()
    const ethereum_address = await register_signer.getAddress()
    const hash = await ethers.utils.keccak256(ethereum_address)
    const signature = await signer.signMessage(ethers.utils.arrayify(hash))
    const public_key = ethers.utils.recoverPublicKey(ethers.utils.arrayify(ethers.utils.hashMessage(ethers.utils.arrayify(hash))), signature);

    let random_value = Math.floor(Math.random() * (10 ** 10)); // Number.MAX_SAFE_INTEGER
    secret_value = parseInt(secret_value) + parseInt(random_value)

    let secure_numberA = Math.floor(Math.random() * (10 ** 16)); // Number.MAX_SAFE_INTEGER
    let secure_numberB = Math.floor(Math.random() * (10 ** 16)); // Number.MAX_SAFE_INTEGER

    console.log(secret_value);
    console.log(random_value);
    console.log(secure_numberA);
    console.log(secure_numberB);

    let commitmentA = await zokrates_hash(String(secret_value), String(secure_numberA));
    commitmentA = JSON.parse(commitmentA);

    let commitmentB = await zokrates_hash(String(random_value), String(secure_numberB));
    commitmentB = JSON.parse(commitmentB);

    console.log(commitmentA);
    console.log(commitmentB);

    let transaction = await contract.register(String(commitmentA), String(commitmentB), String(public_key));
    
    $("#status-register").html('<b style="color:green;">You have registered with the transaction: ' + transaction.hash + 
                                                   '<br>Secure number is ' + String(secret_value.toString(16)) + '-' + String(random_value.toString(16)) + '-' + String(secure_numberA.toString(16)) + '-' + String(secure_numberB.toString(16)) + 
                                                   '<br>Record secure number to involve with private summation. </b>');
} 

async function submit() {
    let contract_address = $("#submit-contract-address").val();
    let secure_number = $("#submit-secure-number").val();

    let signer = provider.getSigner(0);
    let contract = new ethers.Contract(String(contract_address), abi, signer);

    let [secret_value, random_value, secure_numberA, secure_numberB] = secure_number.split("-");

    secret_value = parseInt(secret_value, 16);
    random_value = parseInt(random_value, 16);
    secure_numberA = parseInt(secure_numberA, 16);
    secure_numberB = parseInt(secure_numberB, 16);

    console.log(secret_value);
    console.log(random_value);
    console.log(secure_numberA);
    console.log(secure_numberB);
    
    let [public_keyA, public_keyB] = await contract.getPublicKeysOfHypercubePairs();
    let ciphertextA = await encrypt(public_keyA.substr(2), String(secret_value) + " " + String(secure_numberA)); 
    let ciphertextB = await encrypt(public_keyB.substr(2), String(random_value) + " " + String(secure_numberB)); 

    console.log(public_keyA);
    console.log(public_keyB);

    let transaction = await contract.submitSecretSumToPair(String(ciphertextA), String(ciphertextB));

    $("#status-submit").html('<b style="color:green;">You have submitted secret sum with the transaction: ' + transaction.hash);
}

async function verify() {
    let contract_address = $("#verify-contract-address").val();
    let secure_number = $("#verify-secure-number").val();
    let private_key = $("#verify-private-key").val();

    let signer = provider.getSigner(0);
    let contract = new ethers.Contract(String(contract_address), abi, signer);

    let [secret_value, random_value, secure_numberA, secure_numberB] = secure_number.split("-");

    secret_value = parseInt(secret_value, 16);
    random_value = parseInt(random_value, 16);
    secure_numberA = parseInt(secure_numberA, 16);
    secure_numberB = parseInt(secure_numberB, 16);

    let [encodedSecretSumA, encodedSecretSumB, maximumHypercubeStage, currentHypercubeStage] = await contract.getSecretSumComponentsFromPair();

    // Configuration - A 
    let plaintextA = await decrypt(private_key, encodedSecretSumA);
    let secret_value_pairA = parseInt(plaintextA.split(" ")[0]);
    let secure_number_pairA = parseInt(plaintextA.split(" ")[1]);

    let new_secret_value = parseInt(secret_value) + parseInt(secret_value_pairA); 
    let new_secure_numberA = Math.floor(Math.random() * (10 ** 16)); // Number.MAX_SAFE_INTEGER 
    
    let my_commitmentA = await zokrates_hash(String(secret_value), String(secure_numberA));
    my_commitmentA = JSON.parse(my_commitmentA);
    let pair_commitmentA = await zokrates_hash(String(secret_value_pairA), String(secure_number_pairA));
    pair_commitmentA = JSON.parse(pair_commitmentA);
    let new_commitmentA = await zokrates_hash(String(new_secret_value), String(new_secure_numberA));
    new_commitmentA = JSON.parse(new_commitmentA);

    console.log(secret_value);
    console.log(secure_numberA);
    console.log(secret_value_pairA);
    console.log(secure_number_pairA);
    console.log(new_secret_value);
    console.log(new_secure_numberA);
    console.log(my_commitmentA);
    console.log(pair_commitmentA);
    console.log(new_commitmentA);

    console.time('Proof Generation Time')

    let proofA = await zokrates_sender_proof(String(secret_value), String(secure_numberA), String(new_secure_numberA), String(secret_value_pairA), String(secure_number_pairA), String(my_commitmentA), String(pair_commitmentA), String(new_commitmentA));

    console.timeEnd('Proof Generation Time')

    console.log(proofA.proof.a);
    console.log(proofA.proof.b);
    console.log(proofA.proof.c);
    console.log(proofA.inputs);

    // Configuration - B
    let plaintextB = await decrypt(private_key, encodedSecretSumB);
    let random_value_pairB = parseInt(plaintextB.split(" ")[0]);
    let secure_number_pairB = parseInt(plaintextB.split(" ")[1]);

    let new_random_value = parseInt(random_value) + parseInt(random_value_pairB); 
    let new_secure_numberB = Math.floor(Math.random() * (10 ** 16)); // Number.MAX_SAFE_INTEGER 
    
    let my_commitmentB = await zokrates_hash(String(random_value), String(secure_numberB));
    my_commitmentB = JSON.parse(my_commitmentB);
    let pair_commitmentB = await zokrates_hash(String(random_value_pairB), String(secure_number_pairB));
    pair_commitmentB = JSON.parse(pair_commitmentB);
    let new_commitmentB = await zokrates_hash(String(new_random_value), String(new_secure_numberB));
    new_commitmentB = JSON.parse(new_commitmentB);

    console.log(random_value);
    console.log(secure_numberB);
    console.log(random_value_pairB);
    console.log(secure_number_pairB);
    console.log(new_random_value);
    console.log(new_secure_numberB);
    console.log(my_commitmentB);
    console.log(pair_commitmentB);
    console.log(new_commitmentB);

    console.time('Proof Generation Time')

    let proofB = await zokrates_sender_proof(String(random_value), String(secure_numberB), String(new_secure_numberB), String(random_value_pairB), String(secure_number_pairB), String(my_commitmentB), String(pair_commitmentB), String(new_commitmentB));

    console.timeEnd('Proof Generation Time')

    console.log(proofB.proof.a);
    console.log(proofB.proof.b);
    console.log(proofB.proof.c);
    console.log(proofB.inputs);

    let transaction = await contract.verifyProof(proofA.proof.a, proofA.proof.b, proofA.proof.c, proofB.proof.a, proofB.proof.b, proofB.proof.c, String(new_commitmentA), String(new_commitmentB));

    if (Number(currentHypercubeStage) + 1 == Number(maximumHypercubeStage)) {
        $("#status-verify").html('<b style="color:green;">You have verified with the transaction: ' + transaction.hash + 
        '<br>Congratulations! Final sum is ' + String(parseInt(new_secret_value) - parseInt(new_random_value)));
    }
    else {
        $("#status-verify").html('<b style="color:green;">You have verified with the transaction: ' + transaction.hash + 
                                                     '<br>Secure number is ' + String(new_secret_value.toString(16)) + '-' + String(new_random_value.toString(16)) + '-' + String(new_secure_numberA.toString(16)) + '-' + String(new_secure_numberB.toString(16)) + 
                                                     '<br>Record secure number to involve with private summation. </b>');
    }
}
